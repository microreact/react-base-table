{"version":3,"sources":["../src/ColumnResizer.js"],"names":["INVALID_VALUE","addUserSelectStyles","doc","styleEl","getElementById","createElement","type","id","innerHTML","getElementsByTagName","appendChild","body","removeUserSelectStyles","selection","empty","defaultView","window","getSelection","removeAllRanges","e","eventsFor","touch","start","move","stop","mouse","dragEventFor","lastClick","ColumnResizer","props","isDragging","lastX","width","_setHandleRef","bind","_handleClick","_handleMouseDown","_handleMouseUp","_handleTouchStart","_handleTouchEnd","_handleDragStart","_handleDragStop","_handleDrag","handleRef","ownerDocument","removeEventListener","style","column","onResizeStart","onResize","onResizeStop","minWidth","onExpand","rest","userSelect","touchAction","position","top","bottom","right","cursor","ref","stopPropagation","thisClick","Date","valueOf","diff","button","addEventListener","clientX","preventDefault","targetTouches","offsetParent","offsetParentRect","getBoundingClientRect","x","scrollLeft","left","MIN_WIDTH","maxWidth","movedX","newWidth","React","PureComponent","defaultProps","noop","propTypes","PropTypes","object","func","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { noop, addClassName, removeClassName } from './utils';\n\nconst INVALID_VALUE = null;\n\n// copied from https://github.com/mzabriskie/react-draggable/blob/master/lib/utils/domFns.js\nexport function addUserSelectStyles(doc) {\n  if (!doc) return;\n  let styleEl = doc.getElementById('react-draggable-style-el');\n  if (!styleEl) {\n    styleEl = doc.createElement('style');\n    styleEl.type = 'text/css';\n    styleEl.id = 'react-draggable-style-el';\n    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {all: inherit;}\\n';\n    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {all: inherit;}\\n';\n    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n  }\n  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n}\n\nexport function removeUserSelectStyles(doc) {\n  if (!doc) return;\n  try {\n    if (doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n    if (doc.selection) {\n      doc.selection.empty();\n    } else {\n      // Remove selection caused by scroll, unless it's a focused input\n      // (we use doc.defaultView in case we're in an iframe)\n      const selection = (doc.defaultView || window).getSelection();\n      if (selection && selection.type !== 'Caret') {\n        selection.removeAllRanges();\n      }\n    }\n  } catch (e) {\n    // probably IE\n  }\n}\n\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend',\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup',\n  },\n};\n\nlet dragEventFor = eventsFor.mouse;\n\nlet lastClick = null;\n\n/**\n * ColumnResizer for BaseTable\n */\nclass ColumnResizer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.isDragging = false;\n    this.lastX = INVALID_VALUE;\n    this.width = 0;\n\n    this._setHandleRef = this._setHandleRef.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n    this._handleMouseDown = this._handleMouseDown.bind(this);\n    this._handleMouseUp = this._handleMouseUp.bind(this);\n    this._handleTouchStart = this._handleTouchStart.bind(this);\n    this._handleTouchEnd = this._handleTouchEnd.bind(this);\n    this._handleDragStart = this._handleDragStart.bind(this);\n    this._handleDragStop = this._handleDragStop.bind(this);\n    this._handleDrag = this._handleDrag.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.handleRef) {\n      const { ownerDocument } = this.handleRef;\n      ownerDocument.removeEventListener(eventsFor.mouse.move, this._handleDrag);\n      ownerDocument.removeEventListener(eventsFor.mouse.stop, this._handleDragStop);\n      ownerDocument.removeEventListener(eventsFor.touch.move, this._handleDrag);\n      ownerDocument.removeEventListener(eventsFor.touch.stop, this._handleDragStop);\n      removeUserSelectStyles(ownerDocument);\n    }\n  }\n\n  render() {\n    const { style, column, onResizeStart, onResize, onResizeStop, minWidth, onExpand, ...rest } = this.props;\n\n    return (\n      <div\n        {...rest}\n        ref={this._setHandleRef}\n        onClick={this._handleClick}\n        onMouseDown={this._handleMouseDown}\n        onMouseUp={this._handleMouseUp}\n        onTouchStart={this._handleTouchStart}\n        onTouchEnd={this._handleTouchEnd}\n        style={{\n          userSelect: 'none',\n          touchAction: 'none',\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          right: 0,\n          cursor: 'col-resize',\n          ...style,\n        }}\n      />\n    );\n  }\n\n  _setHandleRef(ref) {\n    this.handleRef = ref;\n  }\n\n  _handleClick(e) {\n    e.stopPropagation();\n  }\n\n  _handleMouseDown(e) {\n    const thisClick = new Date().valueOf();\n    const diff = thisClick - lastClick;\n    lastClick = thisClick;\n    if (lastClick && diff < 500) {\n      this.props.onExpand && this.props.onExpand(this.props.column);\n      return;\n    }\n    dragEventFor = eventsFor.mouse;\n    this._handleDragStart(e);\n  }\n\n  _handleMouseUp(e) {\n    dragEventFor = eventsFor.mouse;\n    this._handleDragStop(e);\n  }\n\n  _handleTouchStart(e) {\n    dragEventFor = eventsFor.touch;\n    this._handleDragStart(e);\n  }\n\n  _handleTouchEnd(e) {\n    dragEventFor = eventsFor.touch;\n    this._handleDragStop(e);\n  }\n\n  _handleDragStart(e) {\n    if (typeof e.button === 'number' && e.button !== 0) return;\n\n    this.isDragging = true;\n    this.lastX = INVALID_VALUE;\n    this.width = this.props.column.width;\n    this.props.onResizeStart(this.props.column);\n\n    const { ownerDocument } = this.handleRef;\n    addUserSelectStyles(ownerDocument);\n    ownerDocument.addEventListener(dragEventFor.move, this._handleDrag);\n    ownerDocument.addEventListener(dragEventFor.stop, this._handleDragStop);\n  }\n\n  _handleDragStop(e) {\n    if (!this.isDragging) return;\n    this.isDragging = false;\n\n    this.props.onResizeStop(this.props.column);\n\n    const { ownerDocument } = this.handleRef;\n    removeUserSelectStyles(ownerDocument);\n    ownerDocument.removeEventListener(dragEventFor.move, this._handleDrag);\n    ownerDocument.removeEventListener(dragEventFor.stop, this._handleDragStop);\n  }\n\n  _handleDrag(e) {\n    let clientX = e.clientX;\n    if (e.type === eventsFor.touch.move) {\n      e.preventDefault();\n      if (e.targetTouches && e.targetTouches[0]) clientX = e.targetTouches[0].clientX;\n    }\n\n    const { offsetParent } = this.handleRef;\n    const offsetParentRect = offsetParent.getBoundingClientRect();\n    const x = clientX + offsetParent.scrollLeft - offsetParentRect.left;\n\n    if (this.lastX === INVALID_VALUE) {\n      this.lastX = x;\n      return;\n    }\n\n    const { column, minWidth: MIN_WIDTH } = this.props;\n    const { width, maxWidth, minWidth = MIN_WIDTH } = column;\n    const movedX = x - this.lastX;\n    if (!movedX) return;\n\n    this.width = this.width + movedX;\n    this.lastX = x;\n\n    let newWidth = this.width;\n    if (maxWidth && newWidth > maxWidth) {\n      newWidth = maxWidth;\n    } else if (newWidth < minWidth) {\n      newWidth = minWidth;\n    }\n\n    if (newWidth === width) return;\n    this.props.onResize(column, newWidth);\n  }\n}\n\nColumnResizer.defaultProps = {\n  onResizeStart: noop,\n  onResize: noop,\n  onResizeStop: noop,\n  minWidth: 30,\n};\n\nColumnResizer.propTypes = {\n  /**\n   * Custom style for the drag handler\n   */\n  style: PropTypes.object,\n  /**\n   * The column object to be dragged\n   */\n  column: PropTypes.object,\n  onExpand: PropTypes.func,\n  /**\n   * A callback function when resizing started\n   * The callback is of the shape of `(column) => *`\n   */\n  onResizeStart: PropTypes.func,\n  /**\n   * A callback function when resizing the column\n   * The callback is of the shape of `(column, width) => *`\n   */\n  onResize: PropTypes.func,\n  /**\n   * A callback function when resizing stopped\n   * The callback is of the shape of `(column) => *`\n   */\n  onResizeStop: PropTypes.func,\n  /**\n   * Minimum width of the column could be resized to if the column's `minWidth` is not set\n   */\n  minWidth: PropTypes.number,\n};\n\nexport default ColumnResizer;\n"],"file":"ColumnResizer.js"}